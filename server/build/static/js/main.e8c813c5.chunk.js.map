{"version":3,"sources":["lib/apiClient.js","features/products/products.js","features/cart/cart.js","components/header/CartItem.js","components/header/CartItems.js","components/header/HeaderCartSummary.js","components/header/Header.js","components/main/EditForm.js","components/main/Product.js","components/main/ProductListing.js","components/main/AddForm.js","components/App.js","serviceWorker.js","lib/store.js","index.js"],"names":["apiClient","fetchProducts","a","axios","get","response","data","addProduct","product","post","deleteProduct","productId","delete","editProduct","updateProduct","put","fetchCart","checkout","addToCart","createAsyncThunk","args","callback","newProduct","updatedProduct","productsSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","concat","filter","_id","map","cartSlice","updatedItem","item","replaced","updatedCart","CartItem","title","quantity","price","toFixed","CartItems","cart","cartTotal","reduce","total","current","className","colSpan","HeaderCartSummary","dispatch","useDispatch","useSelector","useEffect","length","onClick","window","confirm","Header","EditForm","setEditFormVisible","useState","setTitle","setPrice","setQuantity","clearInputs","htmlFor","type","id","value","onChange","e","target","event","preventDefault","handleEditProduct","Product","editFormVisible","handleDeleteProduct","handleAddToCart","alert","ProductListing","products","AddForm","addFormVisible","setAddFormVisible","clearFormInputs","App","Boolean","location","hostname","match","store","configureStore","reducer","productsReducer","cartReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8c813c5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchProducts = async () => {\n  const response = await axios.get('/api/products');\n  return response.data\n}\n\nconst addProduct = async (product) => {\n  const response = await axios.post('/api/products', product);\n  return response.data\n}\n\nconst deleteProduct = async (productId) => {\n  await axios.delete(`/api/products/${productId}`)\n  return\n}\n\nconst editProduct = async (productId, updateProduct) => {\n  const response = await axios.put(`/api/products/${productId}`, updateProduct)\n  return response.data\n}\n\nconst fetchCart = async () => {\n  const response = await axios.get('/api/cart')\n  return response.data;\n}\n\nconst checkout = async () => {\n  await axios.post('/api/checkout')\n  return\n}\n\nconst addToCart = async (productId) => {\n  const response = await axios.post('/api/add-to-cart', { productId })\n  return response.data\n}\n\nconst apiClient = { fetchProducts, addProduct, deleteProduct, editProduct, fetchCart, checkout, addToCart }\nexport default apiClient","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport apiClient from '../../lib/apiClient'\n\nexport const fetchProducts = createAsyncThunk(\n  'products/fetchProducts',\n  async() => {\n    const data = await apiClient.fetchProducts();\n    return data\n  }\n)\n\nexport const addProduct = createAsyncThunk(\n  'products/addProduct',\n  async (args) => {\n    const { callback, product } = args\n    const newProduct = await apiClient.addProduct(product);\n\n    if (callback) {\n      callback()\n    }\n\n    return newProduct;\n  }\n)\n\nexport const deleteProduct = createAsyncThunk( \n  'products/deleteProduct',\n  async (productId) => {\n    await apiClient.deleteProduct(productId)\n    return productId\n  }\n)\n\nexport const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (args) => {\n    const { productId, updateProduct, callback } = args;\n    const updatedProduct = await apiClient.editProduct(productId, updateProduct)\n\n    if (callback) {\n      callback();\n    }\n\n    return updatedProduct\n  }\n)\n\nexport const addToCart = createAsyncThunk(\n  'products/addToCart',\n  async (args) => {\n    const { productId, callback } = args;\n    const data = await apiClient.addToCart(productId)\n\n    if (callback) {\n      callback()\n    }\n    return data\n  }\n)\n\nconst initialState = [];\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchProducts.fulfilled, (state, action) => {\n      return action.payload\n    })\n\n    builder.addCase(addProduct.fulfilled, (state, action) => {\n      const newProduct = action.payload\n      return state.concat(newProduct)\n    })\n\n    builder.addCase(deleteProduct.fulfilled, (state, action) => {\n      const productId = action.payload\n      return state.filter(product => product._id !== productId)\n    })\n\n    builder.addCase(editProduct.fulfilled, (state, action) => {\n      const updatedProduct = action.payload\n      return state.map(product => product._id === updatedProduct._id ? updatedProduct : product)\n    })\n    \n    builder.addCase(addToCart.fulfilled, (state, action) => {\n      const updatedProduct = action.payload.product\n      return state.map(product => product._id === updatedProduct._id ? updatedProduct : product)\n    })\n  }\n})\n\nexport default productsSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { addToCart } from '../products/products';\nimport apiClient from '../../lib/apiClient'\n\nexport const fetchCart = createAsyncThunk(\n  'cart/fetchCart',\n  async() => {\n    const data = await apiClient.fetchCart();\n    return data\n  }\n)\n\nexport const checkout = createAsyncThunk(\n  'cart/checkout',\n  async() => {\n    await apiClient.checkout();\n    return\n  }\n)\n\nconst initialState = [];\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCart.fulfilled, (state, action) => {\n      return action.payload\n    })\n\n    builder.addCase(checkout.fulfilled, (state, action) => {\n      return []\n    })\n    \n    builder.addCase(addToCart.fulfilled, (state, action) => {\n      const updatedItem = action.payload.item\n\n      let replaced = false;\n\n      let updatedCart = state.map(item => {\n        if (item._id === updatedItem._id) {\n          replaced = true;\n          return updatedItem\n        }\n        return item\n      })\n\n      if (!replaced) {\n        return state.concat(updatedItem)\n      }\n\n      return updatedCart\n    })\n  }\n})\n\nexport default cartSlice.reducer;","const CartItem = ({ item }) => {\n  return (\n    <tr>\n      <td>{item.title}</td>\n      <td>{item.quantity}</td>\n      <td>${item.price.toFixed(2)}</td>\n    </tr>\n  )\n}\n\nexport default CartItem","import CartItem from \"./CartItem\"\n\nconst CartItems = ({ cart }) => {\n  let cartTotal = cart.reduce((total, current) => total + (current.price * current.quantity), 0)\n\n  return (\n    <table className=\"cart-items\">\n      <tbody>\n        <tr>\n          <th>Item</th>\n          <th>Quantity</th>\n          <th>Price</th>\n        </tr>\n        {cart.map(item => \n          <CartItem \n            item={item} \n            key={item._id}\n          />\n        )}\n        <tr>\n          <td colSpan=\"3\" className=\"total\">Total: ${cartTotal.toFixed(2)}</td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nexport default CartItems","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchCart, checkout } from \"../../features/cart/cart\"\nimport CartItems from \"./CartItems\"\n\nconst HeaderCartSummary = () => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state => state.cart)\n  useEffect(() => {\n    dispatch(fetchCart());\n  }, [dispatch])\n\n  const handleCheckout = () => {\n    if (window.confirm(`Are you sure you want to checkout?`)) {\n      dispatch(checkout())\n    }\n  }\n\n  if (cart.length === 0) {\n    return (\n      <div className=\"cart\">\n        <h2>Your Cart</h2>\n        <p>Your cart is empty</p>\n        <p>Total: $0</p>\n        <button className=\"button checkout disabled\">Checkout</button>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"cart\">\n        <h2>Your Cart</h2>\n        <CartItems \n          cart={cart}\n        />\n        <button\n          className=\"button checkout\"\n          onClick={() => handleCheckout()}\n        >\n          Checkout\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default HeaderCartSummary","import HeaderCartSummary from \"./HeaderCartSummary\"\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>The Shop!</h1>\n      <HeaderCartSummary />\n    </header>\n  )\n}\n\nexport default Header","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProduct } from \"../../features/products/products\";\n\nconst EditForm = ({ setEditFormVisible, product }) => {\n  const dispatch = useDispatch();\n\n  const [ title, setTitle ] = useState(product.title);\n  const [ price, setPrice ] = useState(product.price);\n  const [ quantity, setQuantity ] = useState(product.quantity);\n\n  const handleEditProduct = event => {\n    event.preventDefault();\n\n    const updateProduct = {\n      title,\n      price,\n      quantity,\n    }\n\n    dispatch(editProduct({\n      productId: product._id,\n      updateProduct: updateProduct,\n      callback: clearInputs\n    }))\n    // onEditProduct(updatedProduct, productId, clearInputs)\n  }\n\n  const clearInputs = () => {\n    setEditFormVisible(false);\n  }\n\n  const handleCancelEditForm = event => {\n    event.preventDefault();\n    setEditFormVisible(false);\n  }\n\n  return (\n    <div className=\"edit-form\">\n      <h3>Edit Product</h3>\n      <form>\n      <div className=\"input-group\">\n          <label htmlFor=\"product-name\">Product Name</label>\n          <input \n            type=\"text\" \n            id=\"product-name\" \n            value={title} \n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-price\">Price</label>\n          <input \n            type=\"text\" \n            id=\"product-price\" \n            value={price} \n            onChange={(e) => setPrice(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-quantity\">Quantity</label>\n          <input \n            type=\"text\" \n            id=\"product-quantity\" \n            value={quantity} \n            onChange={(e) => setQuantity(e.target.value)}\n          />\n        </div>\n\n        <div className=\"actions form-actions\">\n          <button className=\"button\" onClick={(e) => handleEditProduct(e)}>\n            Update\n          </button>\n          <button className=\"button\" onClick={(e) => handleCancelEditForm(e)}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditForm","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteProduct, addToCart } from \"../../features/products/products\";\nimport EditForm from \"./EditForm\";\n\nconst Product = ({ product }) => {\n  const dispatch = useDispatch();\n\n  const [ editFormVisible, setEditFormVisible ] = useState(false)\n\n  const handleDeleteProduct = () => {\n    if (window.confirm(`Are you sure you want to delete ${product.title}?`)) {\n      dispatch(deleteProduct(product._id))\n    }\n  }  \n\n  const handleAddToCart = event => {\n    event.preventDefault();\n    dispatch(addToCart({\n      productId: product._id,\n      callback: alert,\n    }))\n    \n  }\n\n  const alert = () => {\n    window.alert(`Successfully added ${product.title} to cart!`)\n  }\n\n  if (editFormVisible) {\n    return (\n      <div className=\"product\">\n        <div className=\"product-details\">\n          <h3>{product.title}</h3>\n          <p className=\"price\">${product.price}</p>\n          <p className=\"quantity\">{product.quantity} left in stock</p>\n          <div className=\"actions product-actions\">\n            <button \n              className={`button add-to-cart ${product.quantity <= 0 ? 'disabled' : ''}`}\n              onClick={(e) => handleAddToCart(e)}\n            >\n              Add to Cart\n            </button>\n            <button className=\"button edit\">Edit</button>\n          </div>\n          <a \n          className=\"delete-button\"\n          onClick={() => handleDeleteProduct()}><span>X</span></a>\n        </div>\n        <EditForm \n          setEditFormVisible={setEditFormVisible}\n          product={product}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"product\">\n      <div className=\"product-details\">\n        <h3>{product.title}</h3>\n        <p className=\"price\">${product.price}</p>\n        <p className=\"quantity\">{product.quantity} left in stock</p>\n        <div className=\"actions product-actions\">\n          <button \n            className={`button add-to-cart ${product.quantity <= 0 ? 'disabled' : ''}`}\n            onClick={(e) => handleAddToCart(e)}\n          >\n            Add to Cart\n          </button>\n          <button \n            className=\"button edit\"\n            onClick={() => setEditFormVisible(true)}\n          >Edit</button>\n        </div>\n        <a \n          className=\"delete-button\"\n          onClick={() => handleDeleteProduct()}><span>X</span></a>\n      </div>\n    </div>\n  )\n}\n\nexport default Product","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchProducts } from \"../../features/products/products\"\n\nimport Product from \"./Product\"\n\nconst ProductListing = () => {\n  const dispatch = useDispatch();\n\n  const products = useSelector(state => state.products)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  return (\n    <div className=\"product-listing\">\n      <h2>Products</h2>\n      {products.map(product => {\n        return <Product \n          key={product.title}\n          product={product} \n        />\n      })}\n    </div>\n  )\n}\n\nexport default ProductListing","import { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from '../../features/products/products';\n\nconst AddForm = () => {\n  const dispatch = useDispatch()\n\n  const [ addFormVisible, setAddFormVisible ] = useState(false)\n  \n  const [ title, setTitle ] = useState('');\n  const [ price, setPrice ] = useState('');\n  const [ quantity, setQuantity ] = useState('');\n\n  const handleCancelAddForm = event => {\n    event.preventDefault();\n    setAddFormVisible(false);\n  }\n\n  const handleAddProduct = event => {\n    event.preventDefault();\n    const newProduct = {\n      title,\n      quantity,\n      price,\n    }\n\n    dispatch(addProduct(\n      {\n        product: newProduct,\n        callback: clearFormInputs\n      }\n    ))\n  }\n\n  const clearFormInputs = () => {\n    setTitle('')\n    setPrice('')\n    setQuantity('')\n    setAddFormVisible(false)\n  }\n\n  return (\n    <div className={`add-form ${addFormVisible ? 'visible' : ''}`}>\n      <p>\n        <button\n          className=\"button add-product-button\"\n          onClick={() => setAddFormVisible(!addFormVisible)}\n        >\n          Add A Product\n        </button>\n      </p>\n      <h3>Add Product</h3>\n      <form>\n        <div className=\"input-group\">\n          <label htmlFor=\"product-name\">Product Name</label>\n          <input \n            type=\"text\" \n            id=\"product-name\" \n            value={title} \n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-price\">Price</label>\n          <input \n            type=\"text\" \n            id=\"product-price\" \n            value={price} \n            onChange={(e) => setPrice(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-quantity\">Quantity</label>\n          <input \n            type=\"text\" \n            id=\"product-quantity\" \n            value={quantity} \n            onChange={(e) => setQuantity(e.target.value)}\n          />\n        </div>\n\n        <div className=\"actions form-actions\">\n          <button\n            className=\"button\"\n            onClick={(e) => handleAddProduct(e)}\n          >\n            Add\n          </button>\n          <button\n            className=\"button\"\n            onClick={(e) => handleCancelAddForm(e)}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddForm","import Header from \"./header/Header\";\nimport ProductListing from \"./main/ProductListing\";\nimport AddForm from \"./main/AddForm\";\n\nconst App = () => {\n  return (\n    <div id=\"app\">\n      <Header />\n      <main>\n        <ProductListing />\n        <AddForm />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport productsReducer from '../features/products/products';\nimport cartReducer from '../features/cart/cart';\n\nconst store = configureStore({\n  reducer: {\n    products: productsReducer,\n    cart: cartReducer,\n  },\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./lib/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}